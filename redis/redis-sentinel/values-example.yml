# -------------------------------------------------------------------
# Helm Chart 的自定义配置值
# -------------------------------------------------------------------

# Redis 全局配置
global:
  # Redis 访问密码
  redis:
    password: "YOUR_PASSWORD" # 请替换为你的实际密码

# Redis 架构配置
architecture: replication

# Master 节点配置
master:
  # 持久化配置
  persistence:
    enabled: true
    storageClass: "nfs" # 存储类名称
    size: 8Gi           # 持久化存储大小
  # 资源限制与请求
  resources:
    requests:
      cpu: 100m
      memory: 128Mi
    limits:
      cpu: 512m
      memory: 2048Mi

# Replica (从节点) 配置
replica:
  # 从节点数量 (为了实现3哨兵，这里设置为3)
  replicaCount: 3
  # 持久化配置
  persistence:
    enabled: true
    storageClass: "nfs" # 存储类名称
    size: 8Gi           # 持久化存储大小
  # 资源限制与请求
  resources:
    requests:
      cpu: 100m
      memory: 128Mi
    limits:
      cpu: 512m
      memory: 2048Mi

# Sentinel (哨兵) 配置
sentinel:
  enabled: true
  # 持久化配置
  persistence:
    enabled: true
    size: 1Gi # 持久化存储大小
  # 哨兵仲裁所需的最小投票数 (推荐值为 N/2 + 1，这里N是replicaCount，所以(3/2)+1=2)
  quorum: 2
  # 资源限制与请求
  resources:
    requests:
      cpu: 100m
      memory: 128Mi
    limits:
      cpu: 512m
      memory: 2048Mi

# RBAC (Role-Based Access Control) 配置
rbac:
  # 设置为 true 来自动创建 RBAC 相关的资源
  create: true

# Metrics (监控) 配置
metrics:
  enabled: true
  # Prometheus ServiceMonitor 配置
  serviceMonitor:
    enabled: true
    namespace: "monitoring" # Prometheus 监控组件所在的命名空间
    labels:
      release: "kube-prom-stack" # Prometheus Operator 用于发现 ServiceMonitor 的标签值
  # 资源限制与请求
  resources:
    requests:
      cpu: 100m
      memory: 128Mi
    limits:
      cpu: 256m
      memory: 1024Mi

# 额外环境变量
extraEnvVars:
  - name: TZ
    value: Asia/Shanghai

