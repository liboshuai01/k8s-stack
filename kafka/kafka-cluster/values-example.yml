# -------------------------------------------------------------------
# Helm Chart 的自定义配置值
# -------------------------------------------------------------------

# 全局配置
global:
  # 默认存储类名称
  defaultStorageClass: nfs

# 监听器配置
listeners:
  client:
    protocol: PLAINTEXT
    sslClientAuth: none
  controller:
    protocol: PLAINTEXT
    sslClientAuth: none
  interbroker:
    protocol: PLAINTEXT
    sslClientAuth: none
  external:
    protocol: PLAINTEXT
    sslClientAuth: none

# 默认 Init 容器配置
defaultInitContainers:
  prepareConfig:
    resources:
      requests:
        cpu: 100m
        memory: 128Mi
      limits:
        cpu: 250m
        memory: 1024Mi

# Controller 节点配置 (KRaft 模式)
controller:
  # Controller 节点数量
  replicaCount: 3
  # 是否启用持久化存储
  persistence:
    enabled: true
    size: 16Gi
  # 是否启用日志持久化存储
  logPersistence:
    enabled: true
    size: 4Gi
  # 资源请求与限制
  resources:
    requests:
      cpu: 100m
      memory: 128Mi
    limits:
      cpu: 512m
      memory: 2048Mi

# RBAC (Role-Based Access Control) 配置
rbac:
  # 设置为 true 来自动创建 RBAC 相关的资源
  create: true

# 监控指标配置
metrics:
  jmx:
    enabled: true
    resources:
      requests:
        cpu: 100m
        memory: 128Mi
      limits:
        cpu: 256m
        memory: 1024Mi
  serviceMonitor:
    enabled: true
    # Prometheus ServiceMonitor 所在的命名空间
    namespace: monitoring
    selector:
      # Prometheus Operator 用于发现 ServiceMonitor 的标签值
      release: kube-prom-stack
  resources:
    requests:
      cpu: 100m
      memory: 128Mi
    limits:
      cpu: 256m
      memory: 1024Mi

# 额外的环境变量
extraEnvVars:
  - name: TZ
    value: Asia/Shanghai

# 如果需要分离的 Broker 节点 (KRaft 提供的 Dedicated Broker Mode)，请取消注释并配置以下参数
# broker:
#   replicaCount: 3
#   persistence:
#     enabled: true
#     size: 32Gi
#   logPersistence:
#     enabled: true
#     size: 8Gi
#   resources:
#     requests:
#       cpu: 250m
#       memory: 512Mi
#     limits:
#       cpu: 1000m
#       memory: 2048Mi
